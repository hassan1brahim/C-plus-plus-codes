#include <bits/stdc++.h>

using namespace std;

string ltrim(const string &);
string rtrim(const string &);

string gridChallenge(vector<string> grid) {
int count = 0;
     for(int j = 0; j < grid.size(); j++){
        string temp = grid[j];
        for(int i = 0; i < temp.length() - 1; i++) for(int k = 0; k < temp.length() - 1; k++) if(temp[k+1] < temp[k]) swap(temp[k+1], temp[k]);
        grid[j] = temp;
     }
   for(int col = 0; col < grid[0].size(); col++){
      for(int row = 1; row < grid.size(); row++){
            if (grid[row - 1][col] > grid[row][col]){
                return "NO";
            }
        }
    }
// Misunderstood the question a bit, YES/NO will be returned if the elements in a column are not in a alphabetical order.
    return "YES";
}

int main()
{
    ofstream fout(getenv("OUTPUT_PATH"));

    string t_temp;
    getline(cin, t_temp);

    int t = stoi(ltrim(rtrim(t_temp)));

    for (int t_itr = 0; t_itr < t; t_itr++) {
        string n_temp;
        getline(cin, n_temp);

        int n = stoi(ltrim(rtrim(n_temp)));

        vector<string> grid(n);

        for (int i = 0; i < n; i++) {
            string grid_item;
            getline(cin, grid_item);

            grid[i] = grid_item;
        }

        string result = gridChallenge(grid);

        fout << result << "\n";
    }

    fout.close();

    return 0;
}

string ltrim(const string &str) {
    string s(str);

    s.erase(
        s.begin(),
        find_if(s.begin(), s.end(), not1(ptr_fun<int, int>(isspace)))
    );

    return s;
}

string rtrim(const string &str) {
    string s(str);

    s.erase(
        find_if(s.rbegin(), s.rend(), not1(ptr_fun<int, int>(isspace))).base(),
        s.end()
    );

    return s;
}
